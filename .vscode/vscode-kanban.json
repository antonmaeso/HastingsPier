{
  "done": [
    {
      "assignedTo": {
        "name": "mannn"
      },
      "category": "Remove Application",
      "creation_time": "2019-10-24T16:41:01.056Z",
      "description": {
        "content": "Make the close app option on the app bar buttons work",
        "mime": "text/markdown"
      },
      "id": "1",
      "prio": 4,
      "references": [],
      "title": "Remove Application - App Bar"
    },
    {
      "assignedTo": {
        "name": "trekimann"
      },
      "category": "BrowserView",
      "creation_time": "2019-11-13T09:12:40.017Z",
      "description": {
        "content": "When switching to RMDash from another app, the browser view is only half the availible width",
        "mime": "text/markdown"
      },
      "details": {
        "content": "When switching to RMDash from another app, the browser view is only half the availible width. Need to look into why and sort it. Clicking the app button again fits the browserView to the avilible space.",
        "mime": "text/markdown"
      },
      "id": "10",
      "references": [],
      "title": "Fix Browser view not full screen in Application window",
      "type": "bug"
    },
    {
      "category": "Bugs",
      "creation_time": "2019-10-25T14:11:59.309Z",
      "description": {
        "content": "When closing an app which is not the active one, if you add then try to open it again it does not display",
        "mime": "text/markdown"
      },
      "details": {
        "content": "When closing an app which is not the active one, if you add then try to open it again it does not display. I think this is because its loading the state from the session where it was hidden. Maybe have some kind of call to see which application is meant to be active",
        "mime": "text/markdown"
      },
      "id": "5",
      "references": [],
      "title": "When reoping closed app, its not shown",
      "type": "bug"
    },
    {
      "assignedTo": {
        "name": "trekimann"
      },
      "category": "BrowserView",
      "creation_time": "2019-10-30T10:41:07.278Z",
      "description": {
        "content": "When the AppBar is hidden, BrowserWindows should resize automaticaly",
        "mime": "text/markdown"
      },
      "id": "9",
      "references": [],
      "title": "BrowserView resize automatically on appbar hide"
    },
    {
      "assignedTo": {
        "name": "mannn"
      },
      "category": "Remove App",
      "creation_time": "2019-10-25T12:41:38.686Z",
      "description": {
        "content": "When Removing an app with the close on AppBar, if the app open is the one being closed, default to AppSelection",
        "mime": "text/markdown"
      },
      "id": "3",
      "references": [],
      "title": "Move to default if app removed is loaded"
    }
  ],
  "in-progress": [
    {
      "assignedTo": {
        "name": "mannn"
      },
      "creation_time": "2019-10-24T17:13:35.610Z",
      "id": "2",
      "prio": 5,
      "references": [],
      "title": "New browser window opens specific app"
    },
    {
      "assignedTo": {
        "name": "anton_maeso"
      },
      "category": "refactor",
      "creation_time": "2019-10-26T10:16:40.458Z",
      "description": {
        "content": "The aim is so that our users can call a single overloaded method to request data from different sources.\n\nI plan on creating a single class that makes takes a enum that might be file ipc and web then it would take a route and a return address. I havent worked out the specifics yet.",
        "mime": "text/markdown"
      },
      "id": "7",
      "references": [],
      "title": "Create a more general way of acsessing data"
    },
    {
      "assignedTo": {
        "name": "trekimann"
      },
      "category": "Tech Debt",
      "creation_time": "2019-10-30T10:38:07.101Z",
      "description": {
        "content": "We should have JDoc descriptions on Util exports",
        "mime": "text/markdown"
      },
      "details": {
        "content": "We should have JDoc descriptions on Util exports so that it is nice and clear what each one is doing.",
        "mime": "text/markdown"
      },
      "id": "8",
      "references": [],
      "title": "JDoc description on util exports"
    }
  ],
  "testing": [],
  "todo": [
    {
      "assignedTo": {
        "name": "trekimann"
      },
      "category": "Features",
      "creation_time": "2019-11-28T17:01:45.150Z",
      "description": {
        "content": "As a core piece of functionality, we should look to impliment a draft-js based text box",
        "mime": "text/markdown"
      },
      "details": {
        "content": "As a core piece of functionality, we should look to impliment a draft-js based text box. This should be reusable for all text fields from single line inputs through to long text entry.",
        "mime": "text/markdown"
      },
      "id": "13",
      "references": [],
      "title": "Add draft-js based text input"
    },
    {
      "assignedTo": {
        "name": "trekimann"
      },
      "category": "Testing",
      "creation_time": "2019-12-04T17:14:06.828Z",
      "description": {
        "content": "Currently tests run in JEST cant use async. Fix this",
        "mime": "text/markdown"
      },
      "details": {
        "content": "Currently tests run in JEST cant use async. Fix this by configuring webpack and babel fully.\nhttps://jestjs.io/docs/en/tutorial-async",
        "mime": "text/markdown"
      },
      "id": "14",
      "references": [],
      "title": "Add full async JEST support"
    },
    {
      "assignedTo": {
        "name": "mannn"
      },
      "category": "Features",
      "creation_time": "2019-10-25T14:20:55.583Z",
      "description": {
        "content": "Currently notifications on appBar buttons just display the notification. Needs more",
        "mime": "text/markdown"
      },
      "details": {
        "content": "Currently notifications on appBar buttons just display the notification. Change it to display a count of the undread notifications.\nMaybe when the app loads have a notification bar at the top with the undread notifications.\nOr on hover over the counter show a popout with the details in.",
        "mime": "text/markdown"
      },
      "id": "6",
      "references": [],
      "title": "App Notification counter"
    },
    {
      "assignedTo": {
        "name": "trekimann"
      },
      "category": "ipcRenderer",
      "creation_time": "2019-11-13T10:03:21.150Z",
      "description": {
        "content": "Currently there is a generic ipcRenderer.on(\"activeApplication\" function used in Application Window, make it specific",
        "mime": "text/markdown"
      },
      "details": {
        "content": "Currently there is a generic ipcRenderer.on(\"activeApplication\" function used in Application Window, make it specific for each application window so that the listener can be removed when the application window is removed",
        "mime": "text/markdown"
      },
      "id": "12",
      "references": [],
      "title": "Change ipcRenderer.on(\"activeApplication\" to be specific for application"
    },
    {
      "assignedTo": {
        "name": "trekimann"
      },
      "creation_time": "2019-11-13T09:18:34.342Z",
      "description": {
        "content": "There are too many IPC listeneners being created for closeApplication and ActiveApplication",
        "mime": "text/markdown"
      },
      "details": {
        "content": "There are too many IPC listeneners being created for closeApplication and ActiveApplication. Need to change components to destroy listeners when the components are removed. Its possible that the util classes are creating the extras, maybe make them static or create a single instance on main.ts which is then called by components",
        "mime": "text/markdown"
      },
      "id": "11",
      "references": [],
      "title": "Dispose of ipc listeners when component removed"
    },
    {
      "assignedTo": {
        "name": "mannn"
      },
      "category": "Refactor",
      "creation_time": "2019-10-25T12:47:50.775Z",
      "description": {
        "content": "AppBar needs cleaning up. ",
        "mime": "text/markdown"
      },
      "details": {
        "content": "Currently Application bar uses both maps and arrays, it should be possible to just use a map. So Refactor for that",
        "mime": "text/markdown"
      },
      "id": "4",
      "references": [],
      "title": "Refactor ApplicationBar.tsx"
    }
  ]
}